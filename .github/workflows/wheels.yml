name: Build wheels

on:
  push:
    tags:
      - "*"
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false

      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
            manylinux: auto
          # TODO: gcc can't find a suitable -lgcc on 32-bit linux
          # - runner: ubuntu-latest
          #   target: x86
          #   manylinux: auto
          - runner: ubuntu-latest
            target: aarch64
            manylinux: auto
          - runner: ubuntu-latest
            target: armv7
            manylinux: auto
          - runner: ubuntu-latest
            target: s390x
            manylinux: auto
          - runner: ubuntu-latest
            target: ppc64le
            manylinux: auto
    steps:
      - uses: actions/checkout@v4

      - name: Setup micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-name: rust-tests
          environment-file: ci/requirements/environment-rust.yaml

      - name: Help finding installed libraries
        shell: bash -l {0}
        run: |
          pushd $CONDA_PREFIX
          if [[ ${{ runner.os }} == "Windows" ]]; then
            export PKG_CONFIG_PATH="$(readlink -f Library/lib/pkgconfig)"
          else
            export PKG_CONFIG_PATH="$(readlink -f lib/pkgconfig)"
          fi
          popd

          echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH" >> $GITHUB_ENV

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i 3.10 -i 3.11 -i 3.12 -i 3.13
          sccache: "true"
          manylinux: ${{ matrix.manylinux }}

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i 3.10 -i 3.11 -i 3.12 -i 3.13
          sccache: "true"
          manylinux: musllinux_1_2

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i 3.10 -i 3.11 -i 3.12 -i 3.13
          sccache: "true"

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i 3.10 -i 3.11 -i 3.12 -i 3.13
          sccache: "true"

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  # sdist:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Build sdist
  #       uses: PyO3/maturin-action@v1
  #       with:
  #         command: sdist
  #         args: --out dist
  #     - name: Upload sdist
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: wheels-sdist
  #         path: dist

  release:
    runs-on: ubuntu-latest
    name: Release
    environment:
      name: pypi
      url: https://pypi.org/p/grid-indexing
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      # contents: write
      # Used to generate artifact attestation
      attestations: write
    if: startsWith(github.ref, 'refs/tags/')
    needs: [linux, musllinux, windows, macos]
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: "wheels-*"
          path: dist
          merge-multiple: true
      - name: Show downloaded files
        shell: bash
        run: ls -lR
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: "dist/*.whl"
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
