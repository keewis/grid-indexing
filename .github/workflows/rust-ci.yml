name: Rust CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}.${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Rust CI ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-name: rust-tests
          cache-environment: true
          cache-environment-key: "${{runner.os}}-${{runner.arch}}-rust-${{env.TODAY}}-${{hashFiles(env.CONDA_ENV_FILE)}}"
          create-args: >-
            rust
      - name: Create rust cache
        uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: |
          cargo build --tests --keep-going
          cargo test --no-fail-fast

  lint:
    name: Lint
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-name: rust-tests
          cache-environment: true
          cache-environment-key: "${{runner.os}}-${{runner.arch}}-rust-${{env.TODAY}}-${{hashFiles(env.CONDA_ENV_FILE)}}"
          create-args: >-
            rust
            proj
      - name: Create rust cache
        uses: Swatinem/rust-cache@v2
      - name: Tweak environment to find proj
        run: |
          echo "PKG_CONFIG_PATH=$CONDA_PREFIX/lib/pkgconfig" >> "$GITHUB_ENV"
          echo "LD_LIBRARY_PATH=$CONDA_PREFIX/lib" >> "$GITHUB_ENV"
      - name: Cargo clippy
        run: |
          cargo clippy --tests -- -D warnings
